version: '3.8'

services:
  # Note: Using MongoDB Atlas cloud database instead of local MongoDB

  # Backend API for Staging
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: clipture-backend-staging
    restart: unless-stopped
    environment:
      - PORT=8080
      - ENV=staging
      - LOG_LEVEL=info
      - LOG_PRETTY=false
      - DB_NAME=${DB_NAME_STAGING:-ytclipper_staging}
      - MONGO_URI=${MONGO_URI_STAGING}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRY=24h
      - AUTH_JWT_SECRET=${AUTH_JWT_SECRET}
      - AUTH_JWT_EXPIRY_HOURS=72
      - AUTH_PASSWORD_RESET_EXPIRY=24h
      - AUTH_TOKEN_ISSUER=clipture-app-staging
      - API_TIMEOUT=30s
      - API_RATE_LIMIT=200
      - METRICS_ENABLED=true
      - TRACING_ENABLED=false
    ports:
      - '8080:8080'
    # No dependencies needed - using external MongoDB Atlas
    networks:
      - clipture-staging-network
    healthcheck:
      test: ['CMD-SHELL', 'wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Frontend App for Staging
  app:
    build:
      context: ../apps/app
      dockerfile: Dockerfile
    container_name: clipture-app-staging
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - '3000:80'
    networks:
      - clipture-staging-network
    healthcheck:
      test: ['CMD-SHELL', 'wget --no-verbose --tries=1 --spider http://localhost:80/health || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Landing Page for Staging
  landing:
    build:
      context: ../apps/landing
      dockerfile: Dockerfile
    container_name: clipture-landing-staging
    restart: unless-stopped
    ports:
      - '3001:3000'
    networks:
      - clipture-staging-network
    healthcheck:
      test: ['CMD-SHELL', 'wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Redis for caching, sessions, etc.
  redis:
    image: redis:7-alpine
    container_name: clipture-redis-staging
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis_password
    volumes:
      - redis_staging_data:/data
    ports:
      - '6379:6379'
    networks:
      - clipture-staging-network
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_staging_data:
    driver: local

networks:
  clipture-staging-network:
    driver: bridge 